---
blog_post: true
title: Scalate 1.6.1 Released
author: James Strachan
author_url: http://macstrac.blogpost.com
created_at: 2012-12-29 12:06:40 -0000
layout: /WEB-INF/scalate/layouts/blog-post.jade
--- 

The [Scalate team](http://scalate.fusesource.org) is pleased to announce the
availability of Scalate 1.6.1

Scalate is a [Scala 2.9 and 2.10] (http://www.scala-lang.org) based <a
href="http://en.wikipedia.org/wiki/Template_engine_(web)">template
engine</a> which can be used stand alone, with servlets or web frameworks
like [JAXRS](http://scalate.fusesource.org/documentation/jog.html),
[Lift](http://scalate.fusesource.org/documentation/lift.html) or
[Play](http://github.com/pk11/play-scalate) or in integration frameworks
like [Apache Camel](http://camel.apache.org/scalate.html).

The following template languages are supported through the same common API:

* [Ssp](http://scalate.fusesource.org/documentation/ssp-reference.html#syntax)
  which is like a Scala version of [Velocity](http://velocity.apache.org/),
  JSP or Erb from Rails
* [Scaml](http://scalate.fusesource.org/documentation/scaml-reference.html)
  which is a Scala dialect of [Haml](http://haml-lang.com/) for very DRY
  markup along with the
  [Jade](http://scalate.fusesource.org/documentation/jade.html) syntax
* [Mustache](http://scalate.fusesource.org/documentation/mustache.html)
  which is a Scala dialect of [Mustache](https://mustache.github.io/) for
  logic-less templates which also work inside the browser using
  [mustache.js](http://github.com/janl/mustache.js)

All expressions inside
[Ssp](http://scalate.fusesource.org/documentation/ssp-reference.html#syntax),
[Scaml](http://scalate.fusesource.org/documentation/scaml-reference.html)
and [Jade](http://scalate.fusesource.org/documentation/jade.html) benefit
from the full power and expressiveness of Scala plus they are typesafe and
checked at edit/compile time to ensure you don't leave any mistakes in your
templates.


**Scalate 1.6.1 Highlights**

* Cross built against Scala 2.9 and 2.10.
* Dropped support for Scala 2.8.
* Append _[scala-version] tag to all artifact IDs to denote Scala binary compatibility.
* support stripping newlines from output in SSP templates
* Upgraded versions of scalamd and wikitext
* Add pooling for pegdown
* Make Pegdown filter a class so extensions can be configured
* Changes to support OSGi with 2.10.0
* Do not create ServletTemplateEngine for every view, reuse once created one. Invoke boot class.
* Upgrade to latest jruby
* Add a shutdown method on Compiler
* Have ScalateView properly register its ServletRenderContext objects
* Now that TemplateEngine uses a ScalaCompiler, it needs a method for shutting it down.
* Reset scala Source before read to support multiple reads
* Do not retry template compilation twice
* Use buildhelper plugin to include src/main/scala as source dir
* Fixed {children} macro to work with static web sites.
* Made some classloader changes for running in an OSGi environment.
* Refactored ConfExport Mojo so that it re-uses code from scalate-tool.
* Add support for sass/scss @import
* Added Less Filter and attempted to modify the sbt and Maven builds to match this and the previous Pegdown filter.
* Added PegDown filter
* selective scuery attribute updates (update attribute if it exists)
* Upgraded axis-wsdl4j dependency from 1.2 to 1.5.1
* Added --target-db switch to generate DocBook link database.
* Refactored confexport command to use the libraries from the Confluence Command Line Interface (CLI).

For more detail see the [Full Commit History](https://github.com/scalate/scalate/commits/scalate-project_2.10-1.6.1)

[Feedback](http://scalate.fusesource.org/community.html) is always welcome! 



