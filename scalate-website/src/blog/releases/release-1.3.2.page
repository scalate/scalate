---
blog_post: true
title: Scalate 1.3.2 Released
author: James Strachan
author_url: http://macstrac.blogspot.com
created_at: 2010-11-24 12:06:40 -0000
layout: /WEB-INF/scalate/layouts/blog-post.jade
--- 

The [Scalate team](http://scalate.fusesource.org) is pleased to announce the availability of Scalate 1.3.2

Scalate is a [Scala 2.8](http://www.scala-lang.org) based <a href="http://en.wikipedia.org/wiki/Template_engine_(web)">template engine</a> which can be used stand alone, with servlets or web frameworks like [JAXRS](${uri("/documentation/jog.html")}), [Lift](http://scalate.fusesource.org/documentation/lift.html) or [Play](http://github.com/pk11/play-scalate) or in integration frameworks like [Apache Camel](http://camel.apache.org/scalate.html).

The following template languages are supported through the same common API:

* [Ssp](${uri("/documentation/ssp-reference.html#syntax")}) which is like a Scala version of [Velocity](http://velocity.apache.org/), JSP or Erb from Rails 
* [Scaml](${uri("/documentation/scaml-reference.html")}) which is a Scala dialect of [Haml](http://haml-lang.com/) for very DRY markup along with the [Jade](${uri("/documentation/jade.html")}) syntax
* [Mustache](${uri("/documentation/mustache.html")}) which is a Scala dialect of [Mustache](https://mustache.github.io/) for logic-less templates which also work inside the browser using [mustache.js](http://github.com/janl/mustache.js)

All expressions inside [Ssp](${uri("/documentation/ssp-reference.html#syntax")}), [Scaml](${uri("/documentation/scaml-reference.html")}) and [Jade](${uri("/documentation/jade.html")}) benefit from the full power and expressiveness of Scala plus they are typesafe and checked at edit/compile time to ensure you don't leave any mistakes in your templates.


**Scalate 1.3.2 Highlights**

* new [set](http://scalate.fusesource.org/documentation/ssp-reference.html#set) [velocity directive](http://scalate.fusesource.org/documentation/ssp-reference.html#velocity_style_directives) in [Ssp](http://scalate.fusesource.org/documentation/ssp-reference.html#syntax) which lets you assign sections of the template output to attributes so you can more easily pass information into layouts.
* minor refactoring of internal classes such as Resource and ResourceLoader from the org.fusesource.scalate.support package into the org.fusesource.scalate.util package to make the util package more stand alone and reuseable outside of Scalate.
* scalate-util module now refactored out of scalate-core
* both scalate-core and scalate-util now OSGi bundles

For more detail see the [Full Change Log](http://www.assembla.com/spaces/scalate/milestones/289473-1-3-2)

[Feedback](${uri("/community.html")}) is always welcome! 



